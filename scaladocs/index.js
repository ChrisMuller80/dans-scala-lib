Index.PACKAGES = {"nl.knaw.dans.lib.taskqueue" : [{"name" : "nl.knaw.dans.lib.taskqueue.AbstractInbox", "shortDescription" : "An inbox is a directory that contains files (or directories) that generate tasks.", "members_class" : [{"label" : "createFileMonitor", "tail" : "(q: TaskQueue[T]): FileMonitor", "member" : "nl.knaw.dans.lib.taskqueue.AbstractInbox.createFileMonitor", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#createFileMonitor(q:nl.knaw.dans.lib.taskqueue.TaskQueue[T]):better.files.FileMonitor", "kind" : "final def"}, {"label" : "enqueue", "tail" : "(q: TaskQueue[T], s: Option[TaskSorter[T]]): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.AbstractInbox.enqueue", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#enqueue(q:nl.knaw.dans.lib.taskqueue.TaskQueue[T],s:Option[nl.knaw.dans.lib.taskqueue.TaskSorter[T]]):scala.util.Try[Unit]", "kind" : "final def"}, {"member" : "nl.knaw.dans.lib.taskqueue.AbstractInbox#<init>", "error" : "unsupported entity"}, {"member" : "nl.knaw.dans.lib.taskqueue.AbstractInbox#<init>", "error" : "unsupported entity"}, {"label" : "debug", "tail" : "(msg: String)(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.debug", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#debug(msg:String)(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(value: Text[V])(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.trace", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#trace[V](value:sourcecode.Text[V])(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createTask", "tail" : "(f: File): Option[Task[T]]", "member" : "nl.knaw.dans.lib.taskqueue.AbstractInbox.createTask", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html#createTask(f:better.files.File):Option[nl.knaw.dans.lib.taskqueue.Task[T]]", "kind" : "abstract def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractInbox.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTask", "shortDescription" : "An alternative for Task that is easier to implement in Java.", "members_class" : [{"label" : "run", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTask.run", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#run():scala.util.Try[Unit]", "kind" : "final def"}, {"member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTask#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runTask", "tail" : "(): Unit", "member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTask.runTask", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#runTask():Unit", "kind" : "abstract def"}, {"label" : "getTarget", "tail" : "(): T", "member" : "nl.knaw.dans.lib.taskqueue.Task.getTarget", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html#getTarget:T", "kind" : "abstract def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTask.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTaskSorter", "shortDescription" : "A Java-compatible TaskSorter.", "members_class" : [{"label" : "sort", "tail" : "(tasks: List[Task[T]]): List[Task[T]]", "member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTaskSorter.sort", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#sort(tasks:List[nl.knaw.dans.lib.taskqueue.Task[T]]):List[nl.knaw.dans.lib.taskqueue.Task[T]]", "kind" : "final def"}, {"member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTaskSorter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sort", "tail" : "(tasks: List[Task[T]]): List[Task[T]]", "member" : "nl.knaw.dans.lib.taskqueue.AbstractJavaTaskSorter.sort", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html#sort(tasks:java.util.List[nl.knaw.dans.lib.taskqueue.Task[T]]):java.util.List[nl.knaw.dans.lib.taskqueue.Task[T]]", "kind" : "abstract def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/AbstractJavaTaskSorter.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.ActiveTaskQueue", "shortDescription" : "TaskQueue that processes its Tasks on a dedicated thread.", "members_class" : [{"label" : "stop", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.ActiveTaskQueue.stop", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#stop():scala.util.Try[Unit]", "kind" : "def"}, {"label" : "start", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.ActiveTaskQueue.start", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#start():scala.util.Try[Unit]", "kind" : "def"}, {"label" : "add", "tail" : "(t: Task[T]): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.ActiveTaskQueue.add", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#add(t:nl.knaw.dans.lib.taskqueue.Task[T]):scala.util.Try[Unit]", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.taskqueue.ActiveTaskQueue#<init>", "error" : "unsupported entity"}, {"label" : "debug", "tail" : "(msg: String)(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.debug", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#debug(msg:String)(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(value: Text[V])(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.trace", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#trace[V](value:sourcecode.Text[V])(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/ActiveTaskQueue.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.InboxWatcher", "shortDescription" : "Active object that, after it is started, watches an inbox for new files appearing, using the FileMonitor providedby the inbox.", "members_class" : [{"label" : "stop", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.InboxWatcher.stop", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#stop():scala.util.Try[Unit]", "kind" : "def"}, {"label" : "start", "tail" : "(s: Option[TaskSorter[T]]): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.InboxWatcher.start", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#start(s:Option[nl.knaw.dans.lib.taskqueue.TaskSorter[T]]):scala.util.Try[Unit]", "kind" : "def"}, {"label" : "ec", "tail" : ": ExecutionContext", "member" : "nl.knaw.dans.lib.taskqueue.InboxWatcher.ec", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"member" : "nl.knaw.dans.lib.taskqueue.InboxWatcher#<init>", "error" : "unsupported entity"}, {"label" : "debug", "tail" : "(msg: String)(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.debug", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#debug(msg:String)(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(value: Text[V])(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.trace", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#trace[V](value:sourcecode.Text[V])(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/InboxWatcher.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.PassiveTaskQueue", "shortDescription" : "A TaskQueue that processes all of its tasks synchronously.", "members_class" : [{"label" : "process", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.PassiveTaskQueue.process", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#process():scala.util.Try[Unit]", "kind" : "def"}, {"label" : "add", "tail" : "(t: Task[T]): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.PassiveTaskQueue.add", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#add(t:nl.knaw.dans.lib.taskqueue.Task[T]):scala.util.Try[Unit]", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.taskqueue.PassiveTaskQueue#<init>", "error" : "unsupported entity"}, {"label" : "debug", "tail" : "(msg: String)(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.debug", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#debug(msg:String)(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(value: Text[V])(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.trace", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#trace[V](value:sourcecode.Text[V])(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/taskqueue\/PassiveTaskQueue.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.taskqueue.Task", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getTarget", "tail" : "(): T", "member" : "nl.knaw.dans.lib.taskqueue.Task.getTarget", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#getTarget:T", "kind" : "abstract def"}, {"label" : "run", "tail" : "(): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.Task.run", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html#run():scala.util.Try[Unit]", "kind" : "abstract def"}], "shortDescription" : "A task that can succeed or fail.", "trait" : "nl\/knaw\/dans\/lib\/taskqueue\/Task.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.taskqueue.TaskQueue", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "add", "tail" : "(task: Task[T]): Try[Unit]", "member" : "nl.knaw.dans.lib.taskqueue.TaskQueue.add", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html#add(task:nl.knaw.dans.lib.taskqueue.Task[T]):scala.util.Try[Unit]", "kind" : "abstract def"}], "shortDescription" : "Interface to add tasks to a queue.", "trait" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskQueue.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.taskqueue.TaskSorter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sort", "tail" : "(tasks: List[Task[T]]): List[Task[T]]", "member" : "nl.knaw.dans.lib.taskqueue.TaskSorter.sort", "link" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html#sort(tasks:List[nl.knaw.dans.lib.taskqueue.Task[T]]):List[nl.knaw.dans.lib.taskqueue.Task[T]]", "kind" : "abstract def"}], "shortDescription" : "An object that can sort a list of tasks.", "trait" : "nl\/knaw\/dans\/lib\/taskqueue\/TaskSorter.html", "kind" : "trait"}], "nl.knaw.dans.lib.error" : [{"name" : "nl.knaw.dans.lib.error.CompositeException", "shortDescription" : "An exception that bundles a collection of Throwables.", "object" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html", "members_class" : [{"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "nl.knaw.dans.lib.error.CompositeException.equals", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(s: PrintWriter): Unit", "member" : "nl.knaw.dans.lib.error.CompositeException.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#printStackTrace(s:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(s: PrintStream): Unit", "member" : "nl.knaw.dans.lib.error.CompositeException.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#printStackTrace(s:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "nl.knaw.dans.lib.error.CompositeException.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "nl.knaw.dans.lib.error.CompositeException.getCause", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "nl.knaw.dans.lib.error.CompositeException.getMessage", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getMessage():String", "kind" : "def"}, {"label" : "throwables", "tail" : ": Seq[Throwable]", "member" : "nl.knaw.dans.lib.error.CompositeException.throwables", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#throwables:Seq[Throwable]", "kind" : "val"}, {"member" : "nl.knaw.dans.lib.error.CompositeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#clone():Object", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(arg: CompositeException): Option[List[Throwable]]", "member" : "nl.knaw.dans.lib.error.CompositeException.unapply", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#unapply(arg:nl.knaw.dans.lib.error.CompositeException):Option[List[Throwable]]", "kind" : "def"}, {"label" : "apply", "tail" : "(errors: Seq[Throwable]): CompositeException", "member" : "nl.knaw.dans.lib.error.CompositeException.apply", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#apply(errors:Seq[Throwable]):nl.knaw.dans.lib.error.CompositeException", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/CompositeException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/error\/CompositeException.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.error.TraversableTryExtensions", "shortDescription" : "", "members_class" : [{"label" : "collectResults", "tail" : "(canBuildFrom: CanBuildFrom[Nothing, T, M[T]]): Try[M[T]]", "member" : "nl.knaw.dans.lib.error.TraversableTryExtensions.collectResults", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#collectResults(implicitcanBuildFrom:scala.collection.generic.CanBuildFrom[Nothing,T,M[T]]):scala.util.Try[M[T]]", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.error.TraversableTryExtensions#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/error\/package$$TraversableTryExtensions.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.error.TryExtensions", "shortDescription" : "", "members_class" : [{"label" : "unsafeGetOrThrow", "tail" : "(): T", "member" : "nl.knaw.dans.lib.error.TryExtensions.unsafeGetOrThrow", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#unsafeGetOrThrow:T", "kind" : "def"}, {"label" : "combine", "tail" : "(other: Try[S])(ev: <:<[T, (S) ⇒ R]): Try[R]", "member" : "nl.knaw.dans.lib.error.TryExtensions.combine", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#combine[S,R](other:scala.util.Try[S])(implicitev:T<:<S=>R):scala.util.Try[R]", "kind" : "def"}, {"label" : "getOrRecover", "tail" : "(recover: (Throwable) ⇒ S): S", "member" : "nl.knaw.dans.lib.error.TryExtensions.getOrRecover", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#getOrRecover[S>:T](recover:Throwable=>S):S", "kind" : "def"}, {"label" : "doIfFailure", "tail" : "(sideEffect: PartialFunction[Throwable, A]): Try[T]", "member" : "nl.knaw.dans.lib.error.TryExtensions.doIfFailure", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#doIfFailure[A](sideEffect:PartialFunction[Throwable,A]):scala.util.Try[T]", "kind" : "def"}, {"label" : "doIfSuccess", "tail" : "(sideEffect: (T) ⇒ A): Try[T]", "member" : "nl.knaw.dans.lib.error.TryExtensions.doIfSuccess", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#doIfSuccess[A](sideEffect:T=>A):scala.util.Try[T]", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.error.TryExtensions#<init>", "error" : "unsupported entity"}, {"label" : "t", "tail" : ": Try[T]", "member" : "nl.knaw.dans.lib.error.TryExtensions.t", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#t:scala.util.Try[T]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/error\/package$$TryExtensions.html", "kind" : "class"}], "nl.knaw.dans.lib.logging" : [{"name" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging", "members_trait" : [{"label" : "debug", "tail" : "(msg: String)(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.debug", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#debug(msg:String)(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(value: Text[V])(enclosing: Name): Unit", "member" : "nl.knaw.dans.lib.logging.DebugEnhancedLogging.trace", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#trace[V](value:sourcecode.Text[V])(implicitenclosing:sourcecode.Name):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "nl\/knaw\/dans\/lib\/logging\/DebugEnhancedLogging.html", "kind" : "trait"}], "nl" : [], "nl.knaw.dans.lib" : [], "nl.knaw" : [], "nl.knaw.dans.lib.logging.servlet.masked" : [{"name" : "nl.knaw.dans.lib.logging.servlet.masked.Masker", "shortDescription" : "", "object" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html", "members_object" : [{"label" : "formatTuple", "tail" : "(predicate: (String) ⇒ Boolean)(format: (String) ⇒ String)(tuple: (String, Seq[String])): HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatTuple", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatTuple(predicate:String=>Boolean)(format:String=>String)(tuple:(String,Seq[String])):nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatRemoteUserHeader", "tail" : "(): (HeaderMapEntry) ⇒ HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatRemoteUserHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatRemoteUserHeader:nl.knaw.dans.lib.logging.servlet.HeaderMapEntry=>nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatAuthorizationHeader", "tail" : "(): (HeaderMapEntry) ⇒ HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatAuthorizationHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatAuthorizationHeader:nl.knaw.dans.lib.logging.servlet.HeaderMapEntry=>nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatCookieHeader", "tail" : "(headerName: String)(formatter: (String) ⇒ String): (HeaderMapEntry) ⇒ HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatCookieHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatCookieHeader(headerName:String)(formatter:String=>String):nl.knaw.dans.lib.logging.servlet.HeaderMapEntry=>nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatRemoteAddress", "tail" : "(remoteAddress: String): String", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatRemoteAddress", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatRemoteAddress(remoteAddress:String):String", "kind" : "def"}, {"label" : "formatCookie", "tail" : "(value: String): String", "member" : "nl.knaw.dans.lib.logging.servlet.masked.Masker.formatCookie", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#formatCookie(value:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/masked\/Masker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "nl.knaw.dans.lib.encode" : [{"name" : "nl.knaw.dans.lib.encode.PathEncoding", "shortDescription" : "", "members_class" : [{"label" : "escapePath", "tail" : "(escaper: Escaper): String", "member" : "nl.knaw.dans.lib.encode.PathEncoding.escapePath", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#escapePath(implicitescaper:com.google.common.escape.Escaper):String", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.encode.PathEncoding#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : ": Path", "member" : "nl.knaw.dans.lib.encode.PathEncoding.path", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#path:java.nio.file.Path", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/encode\/package$$PathEncoding.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.encode.StringEncoding", "shortDescription" : "", "members_class" : [{"label" : "escapeString", "tail" : "(escaper: Escaper): String", "member" : "nl.knaw.dans.lib.encode.StringEncoding.escapeString", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#escapeString(implicitescaper:com.google.common.escape.Escaper):String", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.encode.StringEncoding#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": String", "member" : "nl.knaw.dans.lib.encode.StringEncoding.s", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#s:String", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/encode\/package$$StringEncoding.html", "kind" : "class"}], "nl.knaw.dans.lib.string" : [{"name" : "nl.knaw.dans.lib.string.StringExtensions", "shortDescription" : "", "members_class" : [{"label" : "toUUID", "tail" : "(): Either[UUIDError, UUID]", "member" : "nl.knaw.dans.lib.string.StringExtensions.toUUID", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#toUUID:Either[nl.knaw.dans.lib.string.package.UUIDError,java.util.UUID]", "kind" : "def"}, {"label" : "emptyIfBlank", "tail" : "(): String", "member" : "nl.knaw.dans.lib.string.StringExtensions.emptyIfBlank", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#emptyIfBlank:String", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Option[String]", "member" : "nl.knaw.dans.lib.string.StringExtensions.toOption", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#toOption:Option[String]", "kind" : "def"}, {"label" : "isBlank", "tail" : "(): Boolean", "member" : "nl.knaw.dans.lib.string.StringExtensions.isBlank", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#isBlank:Boolean", "kind" : "def"}, {"member" : "nl.knaw.dans.lib.string.StringExtensions#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": String", "member" : "nl.knaw.dans.lib.string.StringExtensions.s", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#s:String", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html###():Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "nl\/knaw\/dans\/lib\/string\/package$$StringExtensions.html", "kind" : "class"}, {"name" : "nl.knaw.dans.lib.string.UUIDError", "shortDescription" : "", "members_case class" : [{"member" : "nl.knaw.dans.lib.string.UUIDError#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": String", "member" : "nl.knaw.dans.lib.string.UUIDError.s", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#s:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "nl\/knaw\/dans\/lib\/string\/package$$UUIDError.html", "kind" : "case class"}], "nl.knaw.dans.lib.logging.servlet" : [{"name" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger", "members_trait" : [{"label" : "Config", "tail" : "", "member" : "org.scalatra.Initializable.Config", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#ConfigextendsAnyRef", "kind" : "trait"}, {"label" : "logResponse", "tail" : "(actionResult: ActionResult): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#logResponse(actionResult:org.scalatra.ActionResult):Unit", "kind" : "def"}, {"label" : "logRequest", "tail" : "(): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#logRequest():Unit", "kind" : "def"}, {"label" : "renderResponse", "tail" : "(actionResult: Any): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.renderResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#renderResponse(actionResult:Any):Unit", "kind" : "def"}, {"label" : "decodePercentEncodedPath", "tail" : ": Boolean", "member" : "org.scalatra.ScalatraBase.decodePercentEncodedPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#decodePercentEncodedPath:Boolean", "kind" : "val"}, {"label" : "params", "tail" : "(request: HttpServletRequest): Params", "member" : "org.scalatra.ScalatraBase.params", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#params(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.Params", "kind" : "def"}, {"label" : "params", "tail" : "(key: String)(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.params", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#params(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "def"}, {"label" : "multiParams", "tail" : "(request: HttpServletRequest): MultiParams", "member" : "org.scalatra.ScalatraBase.multiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#multiParams(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.MultiParams", "kind" : "def"}, {"label" : "multiParams", "tail" : "(key: String)(request: HttpServletRequest): Seq[String]", "member" : "org.scalatra.ScalatraBase.multiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#multiParams(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):Seq[String]", "kind" : "def"}, {"label" : "addSessionId", "tail" : "(uri: String)(response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.addSessionId", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#addSessionId(uri:String)(implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "isDevelopmentMode", "tail" : "(): Boolean", "member" : "org.scalatra.ScalatraBase.isDevelopmentMode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#isDevelopmentMode:Boolean", "kind" : "def"}, {"label" : "environment", "tail" : "(): String", "member" : "org.scalatra.ScalatraBase.environment", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#environment:String", "kind" : "def"}, {"label" : "initParameter", "tail" : "(name: String): Option[String]", "member" : "org.scalatra.ScalatraBase.initParameter", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#initParameter(name:String):Option[String]", "kind" : "def"}, {"label" : "contextPath", "tail" : "(): String", "member" : "org.scalatra.ScalatraBase.contextPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#contextPath:String", "kind" : "def"}, {"label" : "serverPort", "tail" : "(request: HttpServletRequest): Int", "member" : "org.scalatra.ScalatraBase.serverPort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#serverPort(implicitrequest:javax.servlet.http.HttpServletRequest):Int", "kind" : "def"}, {"label" : "serverHost", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.serverHost", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#serverHost(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "def"}, {"label" : "fullUrl", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean, withSessionId: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.fullUrl", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#fullUrl(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean,withSessionId:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "redirect", "tail" : "(uri: String)(request: HttpServletRequest, response: HttpServletResponse): Nothing", "member" : "org.scalatra.ScalatraBase.redirect", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#redirect(uri:String)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):Nothing", "kind" : "def"}, {"label" : "needsHttps", "tail" : "(): Boolean", "member" : "org.scalatra.ScalatraBase.needsHttps", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#needsHttps:Boolean", "kind" : "def"}, {"label" : "isHttps", "tail" : "(request: HttpServletRequest): Boolean", "member" : "org.scalatra.ScalatraBase.isHttps", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#isHttps(implicitrequest:javax.servlet.http.HttpServletRequest):Boolean", "kind" : "def"}, {"label" : "url", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean, absolutize: Boolean, withSessionId: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.url", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#url(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean,absolutize:Boolean,withSessionId:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "relativeUrl", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.relativeUrl", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#relativeUrl(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "initialize", "tail" : "(config: (AbstractServletLogger.this)#ConfigT): Unit", "member" : "org.scalatra.ScalatraBase.initialize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#initialize(config:ScalatraBase.this.ConfigT):Unit", "kind" : "def"}, {"label" : "config", "tail" : ": (AbstractServletLogger.this)#ConfigT", "member" : "org.scalatra.ScalatraBase.config", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#config:ScalatraBase.this.ConfigT", "kind" : "val"}, {"label" : "addStatusRoute", "tail" : "(codes: Range, action: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.addStatusRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#addStatusRoute(codes:Range,action:=>Any):Unit", "kind" : "def"}, {"label" : "removeRoute", "tail" : "(method: String, route: Route): Unit", "member" : "org.scalatra.ScalatraBase.removeRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#removeRoute(method:String,route:org.scalatra.Route):Unit", "kind" : "def"}, {"label" : "removeRoute", "tail" : "(method: HttpMethod, route: Route): Unit", "member" : "org.scalatra.ScalatraBase.removeRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#removeRoute(method:org.scalatra.HttpMethod,route:org.scalatra.Route):Unit", "kind" : "def"}, {"label" : "addRoute", "tail" : "(method: HttpMethod, transformers: Seq[RouteTransformer], action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.addRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#addRoute(method:org.scalatra.HttpMethod,transformers:Seq[org.scalatra.RouteTransformer],action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "patch", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.patch", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#patch(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "head", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.head", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#head(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "options", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.options", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#options(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "trap", "tail" : "(codes: Range)(block: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.trap", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#trap(codes:Range)(block:=>Any):Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.delete", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#delete(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "put", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.put", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#put(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "post", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.post", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#post(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "get", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.get", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#get(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "extractStatusCode", "tail" : "(e: HaltException): Int", "member" : "org.scalatra.ScalatraBase.extractStatusCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#extractStatusCode(e:org.scalatra.HaltException):Int", "kind" : "def"}, {"label" : "renderHaltException", "tail" : "(e: HaltException): Unit", "member" : "org.scalatra.ScalatraBase.renderHaltException", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#renderHaltException(e:org.scalatra.HaltException):Unit", "kind" : "def"}, {"label" : "booleanBlock2RouteMatcher", "tail" : "(block: ⇒ Boolean): RouteMatcher", "member" : "org.scalatra.ScalatraBase.booleanBlock2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#booleanBlock2RouteMatcher(block:=>Boolean):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "regex2RouteMatcher", "tail" : "(regex: Regex): RouteMatcher", "member" : "org.scalatra.ScalatraBase.regex2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#regex2RouteMatcher(regex:scala.util.matching.Regex):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "pathPatternParser2RouteMatcher", "tail" : "(pattern: PathPattern): RouteMatcher", "member" : "org.scalatra.ScalatraBase.pathPatternParser2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#pathPatternParser2RouteMatcher(pattern:org.scalatra.PathPattern):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "string2RouteMatcher", "tail" : "(path: String): RouteMatcher", "member" : "org.scalatra.ScalatraBase.string2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#string2RouteMatcher(path:String):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "renderPipeline", "tail" : "(): RenderPipeline", "member" : "org.scalatra.ScalatraBase.renderPipeline", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#renderPipeline:org.scalatra.RenderPipeline", "kind" : "def"}, {"label" : "renderResponseBody", "tail" : "(actionResult: Any): Unit", "member" : "org.scalatra.ScalatraBase.renderResponseBody", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#renderResponseBody(actionResult:Any):Unit", "kind" : "def"}, {"label" : "contentTypeInferrer", "tail" : "(): ContentTypeInferrer", "member" : "org.scalatra.ScalatraBase.contentTypeInferrer", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#contentTypeInferrer:org.scalatra.ContentTypeInferrer", "kind" : "def"}, {"label" : "setMultiparams", "tail" : "(matchedRoute: Option[MatchedRoute], originalParams: MultiParams)(request: HttpServletRequest): Unit", "member" : "org.scalatra.ScalatraBase.setMultiparams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#setMultiparams[S<:<?>](matchedRoute:Option[org.scalatra.MatchedRoute],originalParams:org.scalatra.MultiParams)(implicitrequest:javax.servlet.http.HttpServletRequest):Unit", "kind" : "def"}, {"label" : "withRouteMultiParams", "tail" : "(matchedRoute: Option[MatchedRoute])(thunk: ⇒ S)(request: HttpServletRequest): S", "member" : "org.scalatra.ScalatraBase.withRouteMultiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#withRouteMultiParams[S](matchedRoute:Option[org.scalatra.MatchedRoute])(thunk:=>S)(implicitrequest:javax.servlet.http.HttpServletRequest):S", "kind" : "def"}, {"label" : "error", "tail" : "(handler: ErrorHandler): Unit", "member" : "org.scalatra.ScalatraBase.error", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#error(handler:org.scalatra.ErrorHandler):Unit", "kind" : "def"}, {"label" : "errorHandler", "tail" : ": ErrorHandler", "member" : "org.scalatra.ScalatraBase.errorHandler", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#errorHandler:org.scalatra.ErrorHandler", "kind" : "val"}, {"label" : "methodNotAllowed", "tail" : "(f: (Set[HttpMethod]) ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.methodNotAllowed", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#methodNotAllowed(f:Set[org.scalatra.HttpMethod]=>Any):Unit", "kind" : "def"}, {"label" : "doMethodNotAllowed", "tail" : ": (Set[HttpMethod]) ⇒ Any", "member" : "org.scalatra.ScalatraBase.doMethodNotAllowed", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#doMethodNotAllowed:Set[org.scalatra.HttpMethod]=>Any", "kind" : "val"}, {"label" : "notFound", "tail" : "(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.notFound", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#notFound(fun:=>Any):Unit", "kind" : "def"}, {"label" : "after", "tail" : "(transformers: RouteTransformer*)(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.after", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#after(transformers:org.scalatra.RouteTransformer*)(fun:=>Any):Unit", "kind" : "def"}, {"label" : "before", "tail" : "(transformers: RouteTransformer*)(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.before", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#before(transformers:org.scalatra.RouteTransformer*)(fun:=>Any):Unit", "kind" : "def"}, {"label" : "invoke", "tail" : "(matchedRoute: MatchedRoute): Option[Any]", "member" : "org.scalatra.ScalatraBase.invoke", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#invoke(matchedRoute:org.scalatra.MatchedRoute):Option[Any]", "kind" : "def"}, {"label" : "runRoutes", "tail" : "(routes: Iterable[Route]): Stream[Any]", "member" : "org.scalatra.ScalatraBase.runRoutes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#runRoutes(routes:Iterable[org.scalatra.Route]):Stream[Any]", "kind" : "def"}, {"label" : "runFilters", "tail" : "(filters: Iterable[Route]): Unit", "member" : "org.scalatra.ScalatraBase.runFilters", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#runFilters(filters:Iterable[org.scalatra.Route]):Unit", "kind" : "def"}, {"label" : "isAsyncExecutable", "tail" : "(result: Any): Boolean", "member" : "org.scalatra.ScalatraBase.isAsyncExecutable", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#isAsyncExecutable(result:Any):Boolean", "kind" : "def"}, {"label" : "renderUncaughtException", "tail" : "(e: Throwable)(request: HttpServletRequest, response: HttpServletResponse): Unit", "member" : "org.scalatra.ScalatraBase.renderUncaughtException", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#renderUncaughtException(e:Throwable)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):Unit", "kind" : "def"}, {"label" : "executeRoutes", "tail" : "(): Unit", "member" : "org.scalatra.ScalatraBase.executeRoutes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#executeRoutes():Unit", "kind" : "def"}, {"label" : "servletContext", "tail" : "(): ServletContext", "member" : "org.scalatra.ScalatraBase.servletContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#servletContext:javax.servlet.ServletContext", "kind" : "def"}, {"label" : "handle", "tail" : "(request: HttpServletRequest, response: HttpServletResponse): Unit", "member" : "org.scalatra.ScalatraBase.handle", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#handle(request:javax.servlet.http.HttpServletRequest,response:javax.servlet.http.HttpServletResponse):Unit", "kind" : "def"}, {"label" : "defaultCharacterEncoding", "tail" : ": String", "member" : "org.scalatra.ScalatraBase.defaultCharacterEncoding", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#defaultCharacterEncoding:String", "kind" : "val"}, {"label" : "routes", "tail" : ": RouteRegistry", "member" : "org.scalatra.ScalatraBase.routes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#routes:org.scalatra.RouteRegistry", "kind" : "lazy val"}, {"label" : "seqToSeq", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[Seq[String], Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.seqToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#seqToSeq[T](implicitevidence$5:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[Seq[String],Seq[T]]", "kind" : "implicit def"}, {"label" : "seqHead", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[Seq[String], T]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.seqHead", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#seqHead[T](implicitevidence$4:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[Seq[String],T]", "kind" : "implicit def"}, {"label" : "stringToSeq", "tail" : "(elementConverter: TypeConverter[String, T], separator: String)(arg0: ClassTag[T]): TypeConverter[String, Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToSeq[T](elementConverter:org.scalatra.util.conversion.TypeConverter[String,T],separator:String)(implicitevidence$3:scala.reflect.ClassTag[T]):org.scalatra.util.conversion.TypeConverter[String,Seq[T]]", "kind" : "def"}, {"label" : "defaultStringToSeq", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[String, Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.defaultStringToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#defaultStringToSeq[T](implicitevidence$2:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[String,Seq[T]]", "kind" : "implicit def"}, {"label" : "stringToDateFormat", "tail" : "(format: ⇒ DateFormat): TypeConverter[String, Date]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDateFormat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToDateFormat(format:=>java.text.DateFormat):org.scalatra.util.conversion.TypeConverter[String,java.util.Date]", "kind" : "def"}, {"label" : "stringToDate", "tail" : "(format: ⇒ String): TypeConverter[String, Date]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDate", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToDate(format:=>String):org.scalatra.util.conversion.TypeConverter[String,java.util.Date]", "kind" : "def"}, {"label" : "stringToSelf", "tail" : ": TypeConverter[String, String]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToSelf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToSelf:org.scalatra.util.conversion.TypeConverter[String,String]", "kind" : "implicit val"}, {"label" : "stringToLong", "tail" : ": TypeConverter[String, Long]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToLong", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToLong:org.scalatra.util.conversion.TypeConverter[String,Long]", "kind" : "implicit val"}, {"label" : "stringToInt", "tail" : ": TypeConverter[String, Int]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToInt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToInt:org.scalatra.util.conversion.TypeConverter[String,Int]", "kind" : "implicit val"}, {"label" : "stringToShort", "tail" : ": TypeConverter[String, Short]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToShort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToShort:org.scalatra.util.conversion.TypeConverter[String,Short]", "kind" : "implicit val"}, {"label" : "stringToByte", "tail" : ": TypeConverter[String, Byte]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToByte", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToByte:org.scalatra.util.conversion.TypeConverter[String,Byte]", "kind" : "implicit val"}, {"label" : "stringToDouble", "tail" : ": TypeConverter[String, Double]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDouble", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToDouble:org.scalatra.util.conversion.TypeConverter[String,Double]", "kind" : "implicit val"}, {"label" : "stringToFloat", "tail" : ": TypeConverter[String, Float]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToFloat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToFloat:org.scalatra.util.conversion.TypeConverter[String,Float]", "kind" : "implicit val"}, {"label" : "stringToBoolean", "tail" : ": TypeConverter[String, Boolean]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToBoolean", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#stringToBoolean:org.scalatra.util.conversion.TypeConverter[String,Boolean]", "kind" : "implicit val"}, {"label" : "anyToString", "tail" : ": TypeConverter[Any, String]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToString:org.scalatra.util.conversion.TypeConverter[Any,String]", "kind" : "implicit val"}, {"label" : "anyToLong", "tail" : ": TypeConverter[Any, Long]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToLong", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToLong:org.scalatra.util.conversion.TypeConverter[Any,Long]", "kind" : "implicit val"}, {"label" : "anyToInt", "tail" : ": TypeConverter[Any, Int]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToInt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToInt:org.scalatra.util.conversion.TypeConverter[Any,Int]", "kind" : "implicit val"}, {"label" : "anyToShort", "tail" : ": TypeConverter[Any, Short]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToShort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToShort:org.scalatra.util.conversion.TypeConverter[Any,Short]", "kind" : "implicit val"}, {"label" : "anyToByte", "tail" : ": TypeConverter[Any, Byte]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToByte", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToByte:org.scalatra.util.conversion.TypeConverter[Any,Byte]", "kind" : "implicit val"}, {"label" : "anyToDouble", "tail" : ": TypeConverter[Any, Double]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToDouble", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToDouble:org.scalatra.util.conversion.TypeConverter[Any,Double]", "kind" : "implicit val"}, {"label" : "anyToFloat", "tail" : ": TypeConverter[Any, Float]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToFloat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToFloat:org.scalatra.util.conversion.TypeConverter[Any,Float]", "kind" : "implicit val"}, {"label" : "anyToBoolean", "tail" : ": TypeConverter[Any, Boolean]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToBoolean", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#anyToBoolean:org.scalatra.util.conversion.TypeConverter[Any,Boolean]", "kind" : "implicit val"}, {"label" : "lowestPriorityAny2T", "tail" : "(arg0: ClassTag[T]): TypeConverter[Any, T]", "member" : "org.scalatra.util.conversion.LowestPriorityImplicitConversions.lowestPriorityAny2T", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#lowestPriorityAny2T[T](implicitevidence$1:scala.reflect.ClassTag[T]):org.scalatra.util.conversion.TypeConverter[Any,T]", "kind" : "implicit def"}, {"label" : "safeOption", "tail" : "(f: (S) ⇒ Option[T]): TypeConverter[S, T]", "member" : "org.scalatra.util.conversion.TypeConverterSupport.safeOption", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#safeOption[S,T](f:S=>Option[T]):org.scalatra.util.conversion.TypeConverter[S,T]", "kind" : "implicit def"}, {"label" : "safe", "tail" : "(f: (S) ⇒ T): TypeConverter[S, T]", "member" : "org.scalatra.util.conversion.TypeConverterSupport.safe", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#safe[S,T](f:S=>T):org.scalatra.util.conversion.TypeConverter[S,T]", "kind" : "implicit def"}, {"label" : "toTypedMultiParams", "tail" : "(params: MultiParams): TypedMultiParams", "member" : "org.scalatra.ScalatraParamsImplicits.toTypedMultiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#toTypedMultiParams(params:org.scalatra.MultiParams):org.scalatra.ScalatraParamsImplicits.TypedMultiParams", "kind" : "implicit def"}, {"label" : "toTypedParams", "tail" : "(params: Params): TypedParams", "member" : "org.scalatra.ScalatraParamsImplicits.toTypedParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#toTypedParams(params:org.scalatra.Params):org.scalatra.ScalatraParamsImplicits.TypedParams", "kind" : "implicit def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "org.scalatra.Initializable.shutdown", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#shutdown():Unit", "kind" : "def"}, {"label" : "withResponse", "tail" : "(response: HttpServletResponse)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#withResponse[A](response:javax.servlet.http.HttpServletResponse)(f:=>A):A", "kind" : "def"}, {"label" : "withRequest", "tail" : "(request: HttpServletRequest)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#withRequest[A](request:javax.servlet.http.HttpServletRequest)(f:=>A):A", "kind" : "def"}, {"label" : "withRequestResponse", "tail" : "(request: HttpServletRequest, response: HttpServletResponse)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withRequestResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#withRequestResponse[A](request:javax.servlet.http.HttpServletRequest,response:javax.servlet.http.HttpServletResponse)(f:=>A):A", "kind" : "def"}, {"label" : "response", "tail" : "(): HttpServletResponse", "member" : "org.scalatra.DynamicScope.response", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#response:javax.servlet.http.HttpServletResponse", "kind" : "implicit def"}, {"label" : "request", "tail" : "(): HttpServletRequest", "member" : "org.scalatra.DynamicScope.request", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#request:javax.servlet.http.HttpServletRequest", "kind" : "implicit def"}, {"label" : "trap", "tail" : "(code: Int)(block: ⇒ Any): Unit", "member" : "org.scalatra.CoreDsl.trap", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#trap(code:Int)(block:=>Any):Unit", "kind" : "def"}, {"label" : "pass", "tail" : "(): Nothing", "member" : "org.scalatra.Control.pass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#pass():Nothing", "kind" : "def"}, {"label" : "halt", "tail" : "(result: ActionResult): Nothing", "member" : "org.scalatra.Control.halt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#halt(result:org.scalatra.ActionResult):Nothing", "kind" : "def"}, {"label" : "halt", "tail" : "(status: Integer, body: T, headers: Map[String, String]): Nothing", "member" : "org.scalatra.Control.halt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#halt[T](status:Integer,body:T,headers:Map[String,String]):Nothing", "kind" : "def"}, {"label" : "scalatraContext", "tail" : "(): ScalatraContext", "member" : "org.scalatra.ScalatraContext.scalatraContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#scalatraContext:org.scalatra.ScalatraContext", "kind" : "implicit def"}, {"label" : "format_=", "tail" : "(formatValue: String): Unit", "member" : "org.scalatra.ScalatraContext.format_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#format_=(formatValue:String):Unit", "kind" : "def"}, {"label" : "format_=", "tail" : "(formatValue: Symbol): Unit", "member" : "org.scalatra.ScalatraContext.format_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#format_=(formatValue:Symbol):Unit", "kind" : "def"}, {"label" : "status_=", "tail" : "(code: Int): Unit", "member" : "org.scalatra.ScalatraContext.status_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#status_=(code:Int):Unit", "kind" : "def"}, {"label" : "contentType_=", "tail" : "(contentType: String): Unit", "member" : "org.scalatra.ScalatraContext.contentType_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#contentType_=(contentType:String):Unit", "kind" : "def"}, {"label" : "status", "tail" : "(): Int", "member" : "org.scalatra.ScalatraContext.status", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#status:Int", "kind" : "def"}, {"label" : "contentType", "tail" : "(): String", "member" : "org.scalatra.ScalatraContext.contentType", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#contentType:String", "kind" : "def"}, {"label" : "cookies", "tail" : "(request: HttpServletRequest): SweetCookies", "member" : "org.scalatra.CookieContext.cookies", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#cookies(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.SweetCookies", "kind" : "def"}, {"label" : "cookieOptions", "tail" : "(): CookieOptions", "member" : "org.scalatra.CookieContext.cookieOptions", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#cookieOptions:org.scalatra.CookieOptions", "kind" : "implicit def"}, {"label" : "sessionOption", "tail" : "(request: HttpServletRequest): Option[HttpSession]", "member" : "org.scalatra.SessionSupport.sessionOption", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#sessionOption(implicitrequest:javax.servlet.http.HttpServletRequest):Option[javax.servlet.http.HttpSession]", "kind" : "def"}, {"label" : "session", "tail" : "(key: String)(request: HttpServletRequest): Any", "member" : "org.scalatra.SessionSupport.session", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#session(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):Any", "kind" : "def"}, {"label" : "session", "tail" : "(request: HttpServletRequest): HttpSession", "member" : "org.scalatra.SessionSupport.session", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#session(implicitrequest:javax.servlet.http.HttpServletRequest):javax.servlet.http.HttpSession", "kind" : "implicit def"}, {"label" : "enrichServletContext", "tail" : "(servletContext: ServletContext): RichServletContext", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichServletContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#enrichServletContext(servletContext:javax.servlet.ServletContext):org.scalatra.servlet.RichServletContext", "kind" : "implicit def"}, {"label" : "enrichSession", "tail" : "(session: HttpSession): RichSession", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichSession", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#enrichSession(session:javax.servlet.http.HttpSession):org.scalatra.servlet.RichSession", "kind" : "implicit def"}, {"label" : "enrichResponse", "tail" : "(response: HttpServletResponse): RichResponse", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#enrichResponse(response:javax.servlet.http.HttpServletResponse):org.scalatra.servlet.RichResponse", "kind" : "implicit def"}, {"label" : "enrichRequest", "tail" : "(request: HttpServletRequest): RichRequest", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#enrichRequest(request:javax.servlet.http.HttpServletRequest):org.scalatra.servlet.RichRequest", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logResponse", "tail" : "(logLine: String): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#logResponse(logLine:String):Unit", "kind" : "abstract def"}, {"label" : "logRequest", "tail" : "(logLine: String): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#logRequest(logLine:String):Unit", "kind" : "abstract def"}, {"label" : "requestPath", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.requestPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#requestPath(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "abstract def"}, {"label" : "routeBasePath", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.routeBasePath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#routeBasePath(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "abstract def"}, {"label" : "doNotFound", "tail" : ": Action", "member" : "org.scalatra.ScalatraBase.doNotFound", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#doNotFound:org.scalatra.Action", "kind" : "abstract val"}, {"label" : "configWrapper", "tail" : "(config: (AbstractServletLogger.this)#ConfigT): (AbstractServletLogger.this)#Config", "member" : "org.scalatra.Initializable.configWrapper", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html#configWrapper(config:Initializable.this.ConfigT):Initializable.this.Config", "kind" : "implicit abstract def"}, {"member" : "org.scalatra.Initializable.ConfigT", "error" : "unsupported entity"}], "shortDescription" : "This trait is the base for every servlet logger.", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/AbstractServletLogger.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.PlainLogFormatter", "members_trait" : [{"label" : "formatActionHeaders", "tail" : "(actionHeaders: ActionHeadersMap): ActionHeadersMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatActionHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatActionHeaders(actionHeaders:nl.knaw.dans.lib.logging.servlet.ActionHeadersMap):nl.knaw.dans.lib.logging.servlet.ActionHeadersMap", "kind" : "def"}, {"label" : "formatResponseHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatResponseHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatResponseHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatResponseLog", "tail" : "(actionResult: ActionResult): String", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatResponseLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatResponseLog(actionResult:org.scalatra.ActionResult):String", "kind" : "def"}, {"label" : "formatRemoteAddress", "tail" : "(remoteAddress: String): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRemoteAddress", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatRemoteAddress(remoteAddress:String):String", "kind" : "def"}, {"label" : "formatParameters", "tail" : "(params: MultiParams): MultiParams", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatParameters", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatParameters(params:org.scalatra.MultiParams):org.scalatra.MultiParams", "kind" : "def"}, {"label" : "formatHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatRequestLog", "tail" : "(): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRequestLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#formatRequestLog:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/package$$PlainLogFormatter.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.RequestLogExtensionBase", "members_trait" : [{"label" : "formatParameter", "tail" : "(param: MultiParamsEntry): MultiParamsEntry", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogExtensionBase.formatParameter", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatParameter(param:nl.knaw.dans.lib.logging.servlet.MultiParamsEntry):nl.knaw.dans.lib.logging.servlet.MultiParamsEntry", "kind" : "def"}, {"label" : "formatParameters", "tail" : "(params: MultiParams): MultiParams", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogExtensionBase.formatParameters", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatParameters(params:org.scalatra.MultiParams):org.scalatra.MultiParams", "kind" : "def"}, {"label" : "formatHeader", "tail" : "(header: HeaderMapEntry): HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogExtensionBase.formatHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatHeader(header:nl.knaw.dans.lib.logging.servlet.HeaderMapEntry):nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogExtensionBase.formatHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatRemoteAddress", "tail" : "(remoteAddress: String): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRemoteAddress", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatRemoteAddress(remoteAddress:String):String", "kind" : "def"}, {"label" : "formatRequestLog", "tail" : "(): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRequestLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#formatRequestLog:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for extending the RequestLogFormatter.", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogExtensionBase.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter", "members_trait" : [{"label" : "formatRemoteAddress", "tail" : "(remoteAddress: String): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRemoteAddress", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#formatRemoteAddress(remoteAddress:String):String", "kind" : "def"}, {"label" : "formatParameters", "tail" : "(params: MultiParams): MultiParams", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatParameters", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#formatParameters(params:org.scalatra.MultiParams):org.scalatra.MultiParams", "kind" : "def"}, {"label" : "formatHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#formatHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatRequestLog", "tail" : "(): String", "member" : "nl.knaw.dans.lib.logging.servlet.RequestLogFormatter.formatRequestLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#formatRequestLog:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/RequestLogFormatter.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.ResponseLogExtensionBase", "members_trait" : [{"label" : "formatActionHeader", "tail" : "(header: ActionHeaderEntry): ActionHeaderEntry", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogExtensionBase.formatActionHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#formatActionHeader(header:nl.knaw.dans.lib.logging.servlet.ActionHeaderEntry):nl.knaw.dans.lib.logging.servlet.ActionHeaderEntry", "kind" : "def"}, {"label" : "formatActionHeaders", "tail" : "(actionHeaders: ActionHeadersMap): ActionHeadersMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogExtensionBase.formatActionHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#formatActionHeaders(actionHeaders:nl.knaw.dans.lib.logging.servlet.ActionHeadersMap):nl.knaw.dans.lib.logging.servlet.ActionHeadersMap", "kind" : "def"}, {"label" : "formatResponseHeader", "tail" : "(header: HeaderMapEntry): HeaderMapEntry", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogExtensionBase.formatResponseHeader", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#formatResponseHeader(header:nl.knaw.dans.lib.logging.servlet.HeaderMapEntry):nl.knaw.dans.lib.logging.servlet.HeaderMapEntry", "kind" : "def"}, {"label" : "formatResponseHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogExtensionBase.formatResponseHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#formatResponseHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatResponseLog", "tail" : "(actionResult: ActionResult): String", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatResponseLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#formatResponseLog(actionResult:org.scalatra.ActionResult):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Base trait for extending the ResponseLogFormatter.", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogExtensionBase.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter", "members_trait" : [{"label" : "formatActionHeaders", "tail" : "(actionHeaders: ActionHeadersMap): ActionHeadersMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatActionHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#formatActionHeaders(actionHeaders:nl.knaw.dans.lib.logging.servlet.ActionHeadersMap):nl.knaw.dans.lib.logging.servlet.ActionHeadersMap", "kind" : "def"}, {"label" : "formatResponseHeaders", "tail" : "(headers: HeaderMap): HeaderMap", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatResponseHeaders", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#formatResponseHeaders(headers:nl.knaw.dans.lib.logging.servlet.HeaderMap):nl.knaw.dans.lib.logging.servlet.HeaderMap", "kind" : "def"}, {"label" : "formatResponseLog", "tail" : "(actionResult: ActionResult): String", "member" : "nl.knaw.dans.lib.logging.servlet.ResponseLogFormatter.formatResponseLog", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#formatResponseLog(actionResult:org.scalatra.ActionResult):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ResponseLogFormatter.html", "kind" : "trait"}, {"name" : "nl.knaw.dans.lib.logging.servlet.ServletLogger", "members_trait" : [{"label" : "Config", "tail" : "", "member" : "org.scalatra.Initializable.Config", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#ConfigextendsAnyRef", "kind" : "trait"}, {"label" : "renderUncaughtException", "tail" : "(e: Throwable)(request: HttpServletRequest, response: HttpServletResponse): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.ServletLogger.renderUncaughtException", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#renderUncaughtException(e:Throwable)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):Unit", "kind" : "def"}, {"label" : "logResponse", "tail" : "(logLine: String): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.ServletLogger.logResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#logResponse(logLine:String):Unit", "kind" : "def"}, {"label" : "logRequest", "tail" : "(logLine: String): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.ServletLogger.logRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#logRequest(logLine:String):Unit", "kind" : "def"}, {"label" : "logResponse", "tail" : "(actionResult: ActionResult): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#logResponse(actionResult:org.scalatra.ActionResult):Unit", "kind" : "def"}, {"label" : "logRequest", "tail" : "(): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.logRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#logRequest():Unit", "kind" : "def"}, {"label" : "renderResponse", "tail" : "(actionResult: Any): Unit", "member" : "nl.knaw.dans.lib.logging.servlet.AbstractServletLogger.renderResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#renderResponse(actionResult:Any):Unit", "kind" : "def"}, {"label" : "decodePercentEncodedPath", "tail" : ": Boolean", "member" : "org.scalatra.ScalatraBase.decodePercentEncodedPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#decodePercentEncodedPath:Boolean", "kind" : "val"}, {"label" : "params", "tail" : "(request: HttpServletRequest): Params", "member" : "org.scalatra.ScalatraBase.params", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#params(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.Params", "kind" : "def"}, {"label" : "params", "tail" : "(key: String)(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.params", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#params(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "def"}, {"label" : "multiParams", "tail" : "(request: HttpServletRequest): MultiParams", "member" : "org.scalatra.ScalatraBase.multiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#multiParams(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.MultiParams", "kind" : "def"}, {"label" : "multiParams", "tail" : "(key: String)(request: HttpServletRequest): Seq[String]", "member" : "org.scalatra.ScalatraBase.multiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#multiParams(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):Seq[String]", "kind" : "def"}, {"label" : "addSessionId", "tail" : "(uri: String)(response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.addSessionId", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#addSessionId(uri:String)(implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "isDevelopmentMode", "tail" : "(): Boolean", "member" : "org.scalatra.ScalatraBase.isDevelopmentMode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#isDevelopmentMode:Boolean", "kind" : "def"}, {"label" : "environment", "tail" : "(): String", "member" : "org.scalatra.ScalatraBase.environment", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#environment:String", "kind" : "def"}, {"label" : "initParameter", "tail" : "(name: String): Option[String]", "member" : "org.scalatra.ScalatraBase.initParameter", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#initParameter(name:String):Option[String]", "kind" : "def"}, {"label" : "contextPath", "tail" : "(): String", "member" : "org.scalatra.ScalatraBase.contextPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#contextPath:String", "kind" : "def"}, {"label" : "serverPort", "tail" : "(request: HttpServletRequest): Int", "member" : "org.scalatra.ScalatraBase.serverPort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#serverPort(implicitrequest:javax.servlet.http.HttpServletRequest):Int", "kind" : "def"}, {"label" : "serverHost", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.serverHost", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#serverHost(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "def"}, {"label" : "fullUrl", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean, withSessionId: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.fullUrl", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#fullUrl(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean,withSessionId:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "redirect", "tail" : "(uri: String)(request: HttpServletRequest, response: HttpServletResponse): Nothing", "member" : "org.scalatra.ScalatraBase.redirect", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#redirect(uri:String)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):Nothing", "kind" : "def"}, {"label" : "needsHttps", "tail" : "(): Boolean", "member" : "org.scalatra.ScalatraBase.needsHttps", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#needsHttps:Boolean", "kind" : "def"}, {"label" : "isHttps", "tail" : "(request: HttpServletRequest): Boolean", "member" : "org.scalatra.ScalatraBase.isHttps", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#isHttps(implicitrequest:javax.servlet.http.HttpServletRequest):Boolean", "kind" : "def"}, {"label" : "url", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean, absolutize: Boolean, withSessionId: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.url", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#url(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean,absolutize:Boolean,withSessionId:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "relativeUrl", "tail" : "(path: String, params: Iterable[(String, Any)], includeContextPath: Boolean, includeServletPath: Boolean)(request: HttpServletRequest, response: HttpServletResponse): String", "member" : "org.scalatra.ScalatraBase.relativeUrl", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#relativeUrl(path:String,params:Iterable[(String,Any)],includeContextPath:Boolean,includeServletPath:Boolean)(implicitrequest:javax.servlet.http.HttpServletRequest,implicitresponse:javax.servlet.http.HttpServletResponse):String", "kind" : "def"}, {"label" : "initialize", "tail" : "(config: (ServletLogger.this)#ConfigT): Unit", "member" : "org.scalatra.ScalatraBase.initialize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#initialize(config:ScalatraBase.this.ConfigT):Unit", "kind" : "def"}, {"label" : "config", "tail" : ": (ServletLogger.this)#ConfigT", "member" : "org.scalatra.ScalatraBase.config", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#config:ScalatraBase.this.ConfigT", "kind" : "val"}, {"label" : "addStatusRoute", "tail" : "(codes: Range, action: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.addStatusRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#addStatusRoute(codes:Range,action:=>Any):Unit", "kind" : "def"}, {"label" : "removeRoute", "tail" : "(method: String, route: Route): Unit", "member" : "org.scalatra.ScalatraBase.removeRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#removeRoute(method:String,route:org.scalatra.Route):Unit", "kind" : "def"}, {"label" : "removeRoute", "tail" : "(method: HttpMethod, route: Route): Unit", "member" : "org.scalatra.ScalatraBase.removeRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#removeRoute(method:org.scalatra.HttpMethod,route:org.scalatra.Route):Unit", "kind" : "def"}, {"label" : "addRoute", "tail" : "(method: HttpMethod, transformers: Seq[RouteTransformer], action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.addRoute", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#addRoute(method:org.scalatra.HttpMethod,transformers:Seq[org.scalatra.RouteTransformer],action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "patch", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.patch", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#patch(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "head", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.head", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#head(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "options", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.options", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#options(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "trap", "tail" : "(codes: Range)(block: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.trap", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#trap(codes:Range)(block:=>Any):Unit", "kind" : "def"}, {"label" : "delete", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.delete", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#delete(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "put", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.put", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#put(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "post", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.post", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#post(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "get", "tail" : "(transformers: RouteTransformer*)(action: ⇒ Any): Route", "member" : "org.scalatra.ScalatraBase.get", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#get(transformers:org.scalatra.RouteTransformer*)(action:=>Any):org.scalatra.Route", "kind" : "def"}, {"label" : "extractStatusCode", "tail" : "(e: HaltException): Int", "member" : "org.scalatra.ScalatraBase.extractStatusCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#extractStatusCode(e:org.scalatra.HaltException):Int", "kind" : "def"}, {"label" : "renderHaltException", "tail" : "(e: HaltException): Unit", "member" : "org.scalatra.ScalatraBase.renderHaltException", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#renderHaltException(e:org.scalatra.HaltException):Unit", "kind" : "def"}, {"label" : "booleanBlock2RouteMatcher", "tail" : "(block: ⇒ Boolean): RouteMatcher", "member" : "org.scalatra.ScalatraBase.booleanBlock2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#booleanBlock2RouteMatcher(block:=>Boolean):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "regex2RouteMatcher", "tail" : "(regex: Regex): RouteMatcher", "member" : "org.scalatra.ScalatraBase.regex2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#regex2RouteMatcher(regex:scala.util.matching.Regex):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "pathPatternParser2RouteMatcher", "tail" : "(pattern: PathPattern): RouteMatcher", "member" : "org.scalatra.ScalatraBase.pathPatternParser2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#pathPatternParser2RouteMatcher(pattern:org.scalatra.PathPattern):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "string2RouteMatcher", "tail" : "(path: String): RouteMatcher", "member" : "org.scalatra.ScalatraBase.string2RouteMatcher", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#string2RouteMatcher(path:String):org.scalatra.RouteMatcher", "kind" : "implicit def"}, {"label" : "renderPipeline", "tail" : "(): RenderPipeline", "member" : "org.scalatra.ScalatraBase.renderPipeline", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#renderPipeline:org.scalatra.RenderPipeline", "kind" : "def"}, {"label" : "renderResponseBody", "tail" : "(actionResult: Any): Unit", "member" : "org.scalatra.ScalatraBase.renderResponseBody", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#renderResponseBody(actionResult:Any):Unit", "kind" : "def"}, {"label" : "contentTypeInferrer", "tail" : "(): ContentTypeInferrer", "member" : "org.scalatra.ScalatraBase.contentTypeInferrer", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#contentTypeInferrer:org.scalatra.ContentTypeInferrer", "kind" : "def"}, {"label" : "setMultiparams", "tail" : "(matchedRoute: Option[MatchedRoute], originalParams: MultiParams)(request: HttpServletRequest): Unit", "member" : "org.scalatra.ScalatraBase.setMultiparams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#setMultiparams[S<:<?>](matchedRoute:Option[org.scalatra.MatchedRoute],originalParams:org.scalatra.MultiParams)(implicitrequest:javax.servlet.http.HttpServletRequest):Unit", "kind" : "def"}, {"label" : "withRouteMultiParams", "tail" : "(matchedRoute: Option[MatchedRoute])(thunk: ⇒ S)(request: HttpServletRequest): S", "member" : "org.scalatra.ScalatraBase.withRouteMultiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#withRouteMultiParams[S](matchedRoute:Option[org.scalatra.MatchedRoute])(thunk:=>S)(implicitrequest:javax.servlet.http.HttpServletRequest):S", "kind" : "def"}, {"label" : "error", "tail" : "(handler: ErrorHandler): Unit", "member" : "org.scalatra.ScalatraBase.error", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#error(handler:org.scalatra.ErrorHandler):Unit", "kind" : "def"}, {"label" : "errorHandler", "tail" : ": ErrorHandler", "member" : "org.scalatra.ScalatraBase.errorHandler", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#errorHandler:org.scalatra.ErrorHandler", "kind" : "val"}, {"label" : "methodNotAllowed", "tail" : "(f: (Set[HttpMethod]) ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.methodNotAllowed", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#methodNotAllowed(f:Set[org.scalatra.HttpMethod]=>Any):Unit", "kind" : "def"}, {"label" : "doMethodNotAllowed", "tail" : ": (Set[HttpMethod]) ⇒ Any", "member" : "org.scalatra.ScalatraBase.doMethodNotAllowed", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#doMethodNotAllowed:Set[org.scalatra.HttpMethod]=>Any", "kind" : "val"}, {"label" : "notFound", "tail" : "(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.notFound", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#notFound(fun:=>Any):Unit", "kind" : "def"}, {"label" : "after", "tail" : "(transformers: RouteTransformer*)(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.after", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#after(transformers:org.scalatra.RouteTransformer*)(fun:=>Any):Unit", "kind" : "def"}, {"label" : "before", "tail" : "(transformers: RouteTransformer*)(fun: ⇒ Any): Unit", "member" : "org.scalatra.ScalatraBase.before", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#before(transformers:org.scalatra.RouteTransformer*)(fun:=>Any):Unit", "kind" : "def"}, {"label" : "invoke", "tail" : "(matchedRoute: MatchedRoute): Option[Any]", "member" : "org.scalatra.ScalatraBase.invoke", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#invoke(matchedRoute:org.scalatra.MatchedRoute):Option[Any]", "kind" : "def"}, {"label" : "runRoutes", "tail" : "(routes: Iterable[Route]): Stream[Any]", "member" : "org.scalatra.ScalatraBase.runRoutes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#runRoutes(routes:Iterable[org.scalatra.Route]):Stream[Any]", "kind" : "def"}, {"label" : "runFilters", "tail" : "(filters: Iterable[Route]): Unit", "member" : "org.scalatra.ScalatraBase.runFilters", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#runFilters(filters:Iterable[org.scalatra.Route]):Unit", "kind" : "def"}, {"label" : "isAsyncExecutable", "tail" : "(result: Any): Boolean", "member" : "org.scalatra.ScalatraBase.isAsyncExecutable", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#isAsyncExecutable(result:Any):Boolean", "kind" : "def"}, {"label" : "executeRoutes", "tail" : "(): Unit", "member" : "org.scalatra.ScalatraBase.executeRoutes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#executeRoutes():Unit", "kind" : "def"}, {"label" : "servletContext", "tail" : "(): ServletContext", "member" : "org.scalatra.ScalatraBase.servletContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#servletContext:javax.servlet.ServletContext", "kind" : "def"}, {"label" : "handle", "tail" : "(request: HttpServletRequest, response: HttpServletResponse): Unit", "member" : "org.scalatra.ScalatraBase.handle", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#handle(request:javax.servlet.http.HttpServletRequest,response:javax.servlet.http.HttpServletResponse):Unit", "kind" : "def"}, {"label" : "defaultCharacterEncoding", "tail" : ": String", "member" : "org.scalatra.ScalatraBase.defaultCharacterEncoding", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#defaultCharacterEncoding:String", "kind" : "val"}, {"label" : "routes", "tail" : ": RouteRegistry", "member" : "org.scalatra.ScalatraBase.routes", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#routes:org.scalatra.RouteRegistry", "kind" : "lazy val"}, {"label" : "seqToSeq", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[Seq[String], Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.seqToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#seqToSeq[T](implicitevidence$5:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[Seq[String],Seq[T]]", "kind" : "implicit def"}, {"label" : "seqHead", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[Seq[String], T]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.seqHead", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#seqHead[T](implicitevidence$4:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[Seq[String],T]", "kind" : "implicit def"}, {"label" : "stringToSeq", "tail" : "(elementConverter: TypeConverter[String, T], separator: String)(arg0: ClassTag[T]): TypeConverter[String, Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToSeq[T](elementConverter:org.scalatra.util.conversion.TypeConverter[String,T],separator:String)(implicitevidence$3:scala.reflect.ClassTag[T]):org.scalatra.util.conversion.TypeConverter[String,Seq[T]]", "kind" : "def"}, {"label" : "defaultStringToSeq", "tail" : "(arg0: ClassTag[T], elementConverter: TypeConverter[String, T]): TypeConverter[String, Seq[T]]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.defaultStringToSeq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#defaultStringToSeq[T](implicitevidence$2:scala.reflect.ClassTag[T],implicitelementConverter:org.scalatra.util.conversion.TypeConverter[String,T]):org.scalatra.util.conversion.TypeConverter[String,Seq[T]]", "kind" : "implicit def"}, {"label" : "stringToDateFormat", "tail" : "(format: ⇒ DateFormat): TypeConverter[String, Date]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDateFormat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToDateFormat(format:=>java.text.DateFormat):org.scalatra.util.conversion.TypeConverter[String,java.util.Date]", "kind" : "def"}, {"label" : "stringToDate", "tail" : "(format: ⇒ String): TypeConverter[String, Date]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDate", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToDate(format:=>String):org.scalatra.util.conversion.TypeConverter[String,java.util.Date]", "kind" : "def"}, {"label" : "stringToSelf", "tail" : ": TypeConverter[String, String]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToSelf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToSelf:org.scalatra.util.conversion.TypeConverter[String,String]", "kind" : "implicit val"}, {"label" : "stringToLong", "tail" : ": TypeConverter[String, Long]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToLong", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToLong:org.scalatra.util.conversion.TypeConverter[String,Long]", "kind" : "implicit val"}, {"label" : "stringToInt", "tail" : ": TypeConverter[String, Int]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToInt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToInt:org.scalatra.util.conversion.TypeConverter[String,Int]", "kind" : "implicit val"}, {"label" : "stringToShort", "tail" : ": TypeConverter[String, Short]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToShort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToShort:org.scalatra.util.conversion.TypeConverter[String,Short]", "kind" : "implicit val"}, {"label" : "stringToByte", "tail" : ": TypeConverter[String, Byte]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToByte", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToByte:org.scalatra.util.conversion.TypeConverter[String,Byte]", "kind" : "implicit val"}, {"label" : "stringToDouble", "tail" : ": TypeConverter[String, Double]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToDouble", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToDouble:org.scalatra.util.conversion.TypeConverter[String,Double]", "kind" : "implicit val"}, {"label" : "stringToFloat", "tail" : ": TypeConverter[String, Float]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToFloat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToFloat:org.scalatra.util.conversion.TypeConverter[String,Float]", "kind" : "implicit val"}, {"label" : "stringToBoolean", "tail" : ": TypeConverter[String, Boolean]", "member" : "org.scalatra.util.conversion.DefaultImplicitConversions.stringToBoolean", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#stringToBoolean:org.scalatra.util.conversion.TypeConverter[String,Boolean]", "kind" : "implicit val"}, {"label" : "anyToString", "tail" : ": TypeConverter[Any, String]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToString:org.scalatra.util.conversion.TypeConverter[Any,String]", "kind" : "implicit val"}, {"label" : "anyToLong", "tail" : ": TypeConverter[Any, Long]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToLong", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToLong:org.scalatra.util.conversion.TypeConverter[Any,Long]", "kind" : "implicit val"}, {"label" : "anyToInt", "tail" : ": TypeConverter[Any, Int]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToInt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToInt:org.scalatra.util.conversion.TypeConverter[Any,Int]", "kind" : "implicit val"}, {"label" : "anyToShort", "tail" : ": TypeConverter[Any, Short]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToShort", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToShort:org.scalatra.util.conversion.TypeConverter[Any,Short]", "kind" : "implicit val"}, {"label" : "anyToByte", "tail" : ": TypeConverter[Any, Byte]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToByte", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToByte:org.scalatra.util.conversion.TypeConverter[Any,Byte]", "kind" : "implicit val"}, {"label" : "anyToDouble", "tail" : ": TypeConverter[Any, Double]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToDouble", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToDouble:org.scalatra.util.conversion.TypeConverter[Any,Double]", "kind" : "implicit val"}, {"label" : "anyToFloat", "tail" : ": TypeConverter[Any, Float]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToFloat", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToFloat:org.scalatra.util.conversion.TypeConverter[Any,Float]", "kind" : "implicit val"}, {"label" : "anyToBoolean", "tail" : ": TypeConverter[Any, Boolean]", "member" : "org.scalatra.util.conversion.LowPriorityImplicitConversions.anyToBoolean", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#anyToBoolean:org.scalatra.util.conversion.TypeConverter[Any,Boolean]", "kind" : "implicit val"}, {"label" : "lowestPriorityAny2T", "tail" : "(arg0: ClassTag[T]): TypeConverter[Any, T]", "member" : "org.scalatra.util.conversion.LowestPriorityImplicitConversions.lowestPriorityAny2T", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#lowestPriorityAny2T[T](implicitevidence$1:scala.reflect.ClassTag[T]):org.scalatra.util.conversion.TypeConverter[Any,T]", "kind" : "implicit def"}, {"label" : "safeOption", "tail" : "(f: (S) ⇒ Option[T]): TypeConverter[S, T]", "member" : "org.scalatra.util.conversion.TypeConverterSupport.safeOption", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#safeOption[S,T](f:S=>Option[T]):org.scalatra.util.conversion.TypeConverter[S,T]", "kind" : "implicit def"}, {"label" : "safe", "tail" : "(f: (S) ⇒ T): TypeConverter[S, T]", "member" : "org.scalatra.util.conversion.TypeConverterSupport.safe", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#safe[S,T](f:S=>T):org.scalatra.util.conversion.TypeConverter[S,T]", "kind" : "implicit def"}, {"label" : "toTypedMultiParams", "tail" : "(params: MultiParams): TypedMultiParams", "member" : "org.scalatra.ScalatraParamsImplicits.toTypedMultiParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#toTypedMultiParams(params:org.scalatra.MultiParams):org.scalatra.ScalatraParamsImplicits.TypedMultiParams", "kind" : "implicit def"}, {"label" : "toTypedParams", "tail" : "(params: Params): TypedParams", "member" : "org.scalatra.ScalatraParamsImplicits.toTypedParams", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#toTypedParams(params:org.scalatra.Params):org.scalatra.ScalatraParamsImplicits.TypedParams", "kind" : "implicit def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "org.scalatra.Initializable.shutdown", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#shutdown():Unit", "kind" : "def"}, {"label" : "withResponse", "tail" : "(response: HttpServletResponse)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#withResponse[A](response:javax.servlet.http.HttpServletResponse)(f:=>A):A", "kind" : "def"}, {"label" : "withRequest", "tail" : "(request: HttpServletRequest)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#withRequest[A](request:javax.servlet.http.HttpServletRequest)(f:=>A):A", "kind" : "def"}, {"label" : "withRequestResponse", "tail" : "(request: HttpServletRequest, response: HttpServletResponse)(f: ⇒ A): A", "member" : "org.scalatra.DynamicScope.withRequestResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#withRequestResponse[A](request:javax.servlet.http.HttpServletRequest,response:javax.servlet.http.HttpServletResponse)(f:=>A):A", "kind" : "def"}, {"label" : "response", "tail" : "(): HttpServletResponse", "member" : "org.scalatra.DynamicScope.response", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#response:javax.servlet.http.HttpServletResponse", "kind" : "implicit def"}, {"label" : "request", "tail" : "(): HttpServletRequest", "member" : "org.scalatra.DynamicScope.request", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#request:javax.servlet.http.HttpServletRequest", "kind" : "implicit def"}, {"label" : "trap", "tail" : "(code: Int)(block: ⇒ Any): Unit", "member" : "org.scalatra.CoreDsl.trap", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#trap(code:Int)(block:=>Any):Unit", "kind" : "def"}, {"label" : "pass", "tail" : "(): Nothing", "member" : "org.scalatra.Control.pass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#pass():Nothing", "kind" : "def"}, {"label" : "halt", "tail" : "(result: ActionResult): Nothing", "member" : "org.scalatra.Control.halt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#halt(result:org.scalatra.ActionResult):Nothing", "kind" : "def"}, {"label" : "halt", "tail" : "(status: Integer, body: T, headers: Map[String, String]): Nothing", "member" : "org.scalatra.Control.halt", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#halt[T](status:Integer,body:T,headers:Map[String,String]):Nothing", "kind" : "def"}, {"label" : "scalatraContext", "tail" : "(): ScalatraContext", "member" : "org.scalatra.ScalatraContext.scalatraContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#scalatraContext:org.scalatra.ScalatraContext", "kind" : "implicit def"}, {"label" : "format_=", "tail" : "(formatValue: String): Unit", "member" : "org.scalatra.ScalatraContext.format_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#format_=(formatValue:String):Unit", "kind" : "def"}, {"label" : "format_=", "tail" : "(formatValue: Symbol): Unit", "member" : "org.scalatra.ScalatraContext.format_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#format_=(formatValue:Symbol):Unit", "kind" : "def"}, {"label" : "status_=", "tail" : "(code: Int): Unit", "member" : "org.scalatra.ScalatraContext.status_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#status_=(code:Int):Unit", "kind" : "def"}, {"label" : "contentType_=", "tail" : "(contentType: String): Unit", "member" : "org.scalatra.ScalatraContext.contentType_=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#contentType_=(contentType:String):Unit", "kind" : "def"}, {"label" : "status", "tail" : "(): Int", "member" : "org.scalatra.ScalatraContext.status", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#status:Int", "kind" : "def"}, {"label" : "contentType", "tail" : "(): String", "member" : "org.scalatra.ScalatraContext.contentType", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#contentType:String", "kind" : "def"}, {"label" : "cookies", "tail" : "(request: HttpServletRequest): SweetCookies", "member" : "org.scalatra.CookieContext.cookies", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#cookies(implicitrequest:javax.servlet.http.HttpServletRequest):org.scalatra.SweetCookies", "kind" : "def"}, {"label" : "cookieOptions", "tail" : "(): CookieOptions", "member" : "org.scalatra.CookieContext.cookieOptions", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#cookieOptions:org.scalatra.CookieOptions", "kind" : "implicit def"}, {"label" : "sessionOption", "tail" : "(request: HttpServletRequest): Option[HttpSession]", "member" : "org.scalatra.SessionSupport.sessionOption", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#sessionOption(implicitrequest:javax.servlet.http.HttpServletRequest):Option[javax.servlet.http.HttpSession]", "kind" : "def"}, {"label" : "session", "tail" : "(key: String)(request: HttpServletRequest): Any", "member" : "org.scalatra.SessionSupport.session", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#session(key:String)(implicitrequest:javax.servlet.http.HttpServletRequest):Any", "kind" : "def"}, {"label" : "session", "tail" : "(request: HttpServletRequest): HttpSession", "member" : "org.scalatra.SessionSupport.session", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#session(implicitrequest:javax.servlet.http.HttpServletRequest):javax.servlet.http.HttpSession", "kind" : "implicit def"}, {"label" : "enrichServletContext", "tail" : "(servletContext: ServletContext): RichServletContext", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichServletContext", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#enrichServletContext(servletContext:javax.servlet.ServletContext):org.scalatra.servlet.RichServletContext", "kind" : "implicit def"}, {"label" : "enrichSession", "tail" : "(session: HttpSession): RichSession", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichSession", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#enrichSession(session:javax.servlet.http.HttpSession):org.scalatra.servlet.RichSession", "kind" : "implicit def"}, {"label" : "enrichResponse", "tail" : "(response: HttpServletResponse): RichResponse", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichResponse", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#enrichResponse(response:javax.servlet.http.HttpServletResponse):org.scalatra.servlet.RichResponse", "kind" : "implicit def"}, {"label" : "enrichRequest", "tail" : "(request: HttpServletRequest): RichRequest", "member" : "org.scalatra.servlet.ServletApiImplicits.enrichRequest", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#enrichRequest(request:javax.servlet.http.HttpServletRequest):org.scalatra.servlet.RichRequest", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logger", "tail" : ": Logger", "member" : "nl.knaw.dans.lib.logging.servlet.ServletLogger.logger", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#logger:com.typesafe.scalalogging.Logger", "kind" : "abstract val"}, {"label" : "requestPath", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.requestPath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#requestPath(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "abstract def"}, {"label" : "routeBasePath", "tail" : "(request: HttpServletRequest): String", "member" : "org.scalatra.ScalatraBase.routeBasePath", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#routeBasePath(implicitrequest:javax.servlet.http.HttpServletRequest):String", "kind" : "abstract def"}, {"label" : "doNotFound", "tail" : ": Action", "member" : "org.scalatra.ScalatraBase.doNotFound", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#doNotFound:org.scalatra.Action", "kind" : "abstract val"}, {"label" : "configWrapper", "tail" : "(config: (ServletLogger.this)#ConfigT): (ServletLogger.this)#Config", "member" : "org.scalatra.Initializable.configWrapper", "link" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html#configWrapper(config:Initializable.this.ConfigT):Initializable.this.Config", "kind" : "implicit abstract def"}, {"member" : "org.scalatra.Initializable.ConfigT", "error" : "unsupported entity"}], "shortDescription" : "Default servlet logger implemented with calls to logger.info for both the request and response logging.", "trait" : "nl\/knaw\/dans\/lib\/logging\/servlet\/ServletLogger.html", "kind" : "trait"}], "nl.knaw.dans" : [], "better" : [], "better.files" : []};